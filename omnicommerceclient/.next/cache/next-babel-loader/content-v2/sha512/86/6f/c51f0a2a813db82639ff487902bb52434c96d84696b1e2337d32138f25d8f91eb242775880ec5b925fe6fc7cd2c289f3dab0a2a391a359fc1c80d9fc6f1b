{"ast":null,"code":"import _defineProperty from \"E:/OmniCommerce/omnicommerceclient/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"E:/OmniCommerce/omnicommerceclient/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\OmniCommerce\\\\omnicommerceclient\\\\src\\\\components\\\\InputField.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FormControl, FormErrorMessage, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input } from \"@chakra-ui/input\";\nimport { useField } from \"formik\";\nimport React from \"react\";\nexport var InputField = function InputField(props) {\n  _s();\n\n  var _useField = useField(props),\n      _useField2 = _slicedToArray(_useField, 3),\n      field = _useField2[0],\n      meta = _useField2[1],\n      helper = _useField2[2];\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    isInvalid: !!meta.error,\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      htmlFor: field.name,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread({}, field), {}, {\n      id: field.name,\n      placeholder: props.placeholder\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, _this), meta.error ? /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }, _this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(InputField, \"WZhZs2tAnEBkCtdm4Z68+TyJavc=\", false, function () {\n  return [useField];\n});\n\n_c = InputField;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"sources":["E:/OmniCommerce/omnicommerceclient/src/components/InputField.tsx"],"names":["FormControl","FormErrorMessage","FormLabel","Input","useField","React","InputField","props","field","meta","helper","error","name","label","placeholder"],"mappings":";;;;;;;;;;;;AAAA,SACEA,WADF,EAEEC,gBAFF,EAGEC,SAHF,QAIO,yBAJP;AAKA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAA0BC,QAA1B,QAA0C,QAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAQA,OAAO,IAAMC,UAAqC,GAAG,SAAxCA,UAAwC,CAACC,KAAD,EAAW;AAAA;;AAAA,kBAChCH,QAAQ,CAACG,KAAD,CADwB;AAAA;AAAA,MACvDC,KADuD;AAAA,MAChDC,IADgD;AAAA,MAC1CC,MAD0C;;AAE9D,sBACE,QAAC,WAAD;AAAa,IAAA,SAAS,EAAE,CAAC,CAACD,IAAI,CAACE,KAA/B;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEH,KAAK,CAACI,IAA1B;AAAA,gBAAiCL,KAAK,CAACM;AAAvC;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,KAAD,kCAAWL,KAAX;AAAkB,MAAA,EAAE,EAAEA,KAAK,CAACI,IAA5B;AAAkC,MAAA,WAAW,EAAEL,KAAK,CAACO;AAArD;AAAA;AAAA;AAAA;AAAA,aAFF,EAGGL,IAAI,CAACE,KAAL,gBAAa,QAAC,gBAAD;AAAA,gBAAmBF,IAAI,CAACE;AAAxB;AAAA;AAAA;AAAA;AAAA,aAAb,GAAiE,IAHpE;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CATM;;GAAML,U;UACmBF,Q;;;KADnBE,U","sourcesContent":["import {\r\n  FormControl,\r\n  FormErrorMessage,\r\n  FormLabel,\r\n} from \"@chakra-ui/form-control\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { FieldHookConfig, useField } from \"formik\";\r\nimport React from \"react\";\r\n\r\ntype InputFieldProps = FieldHookConfig<any> & {\r\n  label: string;\r\n  placeholder: string;\r\n  name: string;\r\n};\r\n\r\nexport const InputField: React.FC<InputFieldProps> = (props) => {\r\n  const [field, meta, helper] = useField(props);\r\n  return (\r\n    <FormControl isInvalid={!!meta.error}>\r\n      <FormLabel htmlFor={field.name}>{props.label}</FormLabel>\r\n      <Input {...field} id={field.name} placeholder={props.placeholder} />\r\n      {meta.error ? <FormErrorMessage>{meta.error}</FormErrorMessage> : null}\r\n    </FormControl>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}