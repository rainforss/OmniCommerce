{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\OmniCommerce\\\\omnicommerceclient\\\\src\\\\components\\\\InputField.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { FormControl, FormErrorMessage, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input } from \"@chakra-ui/input\";\nimport { useField } from \"formik\";\nimport React from \"react\";\nexport const InputField = props => {\n  const [field, meta, helper] = useField(props);\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    isInvalid: !!meta.error,\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      htmlFor: field.name,\n      children: field.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread({}, field), {}, {\n      id: field.name,\n      placeholder: field.name\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), meta.error ? /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["E:/OmniCommerce/omnicommerceclient/src/components/InputField.tsx"],"names":["FormControl","FormErrorMessage","FormLabel","Input","useField","React","InputField","props","field","meta","helper","error","name"],"mappings":";;;;;;;;;AAAA,SACEA,WADF,EAEEC,gBAFF,EAGEC,SAHF,QAIO,yBAJP;AAKA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAA0BC,QAA1B,QAA0C,QAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAIA,OAAO,MAAMC,UAAqC,GAAIC,KAAD,IAAW;AAC9D,QAAM,CAACC,KAAD,EAAQC,IAAR,EAAcC,MAAd,IAAwBN,QAAQ,CAACG,KAAD,CAAtC;AACA,sBACE,QAAC,WAAD;AAAa,IAAA,SAAS,EAAE,CAAC,CAACE,IAAI,CAACE,KAA/B;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEH,KAAK,CAACI,IAA1B;AAAA,gBAAiCJ,KAAK,CAACI;AAAvC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD,kCAAWJ,KAAX;AAAkB,MAAA,EAAE,EAAEA,KAAK,CAACI,IAA5B;AAAkC,MAAA,WAAW,EAAEJ,KAAK,CAACI;AAArD;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGH,IAAI,CAACE,KAAL,gBAAa,QAAC,gBAAD;AAAA,gBAAmBF,IAAI,CAACE;AAAxB;AAAA;AAAA;AAAA;AAAA,YAAb,GAAiE,IAHpE;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CATM","sourcesContent":["import {\r\n  FormControl,\r\n  FormErrorMessage,\r\n  FormLabel,\r\n} from \"@chakra-ui/form-control\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { FieldHookConfig, useField } from \"formik\";\r\nimport React from \"react\";\r\n\r\ntype InputFieldProps = FieldHookConfig<any>;\r\n\r\nexport const InputField: React.FC<InputFieldProps> = (props) => {\r\n  const [field, meta, helper] = useField(props);\r\n  return (\r\n    <FormControl isInvalid={!!meta.error}>\r\n      <FormLabel htmlFor={field.name}>{field.name}</FormLabel>\r\n      <Input {...field} id={field.name} placeholder={field.name} />\r\n      {meta.error ? <FormErrorMessage>{meta.error}</FormErrorMessage> : null}\r\n    </FormControl>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}